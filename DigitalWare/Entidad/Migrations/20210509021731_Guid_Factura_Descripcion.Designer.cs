// <auto-generated />
using System;
using Entidad.Entidad;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entidad.Migrations
{
    [DbContext(typeof(SistemaFacturacionDigitalDBContext))]
    [Migration("20210509021731_Guid_Factura_Descripcion")]
    partial class Guid_Factura_Descripcion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidad.Entidad.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoriaNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Entidad.Entidad.Cliente", b =>
                {
                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClienteDireccion")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ClienteEdad")
                        .HasColumnType("int");

                    b.Property<string>("ClienteNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ClienteTelefono")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ClienteTipoIdentificacion")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Entidad.Entidad.DescripcionFactura", b =>
                {
                    b.Property<Guid>("DescripcionFacturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DescripcionFacturaCantidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("DescripcionFacturaPrecio")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<Guid?>("FacturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DescripcionFacturaId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DescripcionFactura");
                });

            modelBuilder.Entity("Entidad.Entidad.Factura", b =>
                {
                    b.Property<Guid>("FacturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FacturaFecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("FacturaIvaporcentaje")
                        .HasColumnName("FacturaIVAPorcentaje")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal>("FacturaIvatotal")
                        .HasColumnName("FacturaIVATotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FacturaSubtotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FacturaTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("FacturaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("Entidad.Entidad.Producto", b =>
                {
                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductoCantidad")
                        .HasColumnType("int");

                    b.Property<string>("ProductoDescripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductoNombre")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal>("ProductoPrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("Entidad.Entidad.DescripcionFactura", b =>
                {
                    b.HasOne("Entidad.Entidad.Factura", "Factura")
                        .WithMany("DescripcionFactura")
                        .HasForeignKey("FacturaId")
                        .HasConstraintName("FK_DescripcionFactura_Factura");

                    b.HasOne("Entidad.Entidad.Producto", "Producto")
                        .WithMany("DescripcionFactura")
                        .HasForeignKey("ProductoId")
                        .HasConstraintName("FK_DescripcionFactura_Producto");
                });

            modelBuilder.Entity("Entidad.Entidad.Factura", b =>
                {
                    b.HasOne("Entidad.Entidad.Cliente", "Cliente")
                        .WithMany("Factura")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_Factura_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entidad.Entidad.Producto", b =>
                {
                    b.HasOne("Entidad.Entidad.Categoria", "Categoria")
                        .WithMany("Producto")
                        .HasForeignKey("CategoriaId")
                        .HasConstraintName("FK_Producto_Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
